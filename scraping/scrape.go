package scraping

import (
	"encoding/json"
	"log"
	"os/exec"
)

type AutoGenerated struct {
	IsEditable               bool        `json:"isEditable"`
	BannerImageURL           string      `json:"bannerImageUrl"`
	Name                     string      `json:"name"`
	Description              string      `json:"description"`
	ImageURL                 string      `json:"imageUrl"`
	RelayID                  string      `json:"relayId"`
	ConnectedTwitterUsername interface{} `json:"connectedTwitterUsername"`
	RepresentativeAsset      struct {
		AssetContract struct {
			OpenseaVersion interface{} `json:"openseaVersion"`
			ID             string      `json:"id"`
		} `json:"assetContract"`
		ID string `json:"id"`
	} `json:"representativeAsset"`
	Slug         string `json:"slug"`
	IsMintable   bool   `json:"isMintable"`
	IsSafelisted bool   `json:"isSafelisted"`
	IsVerified   bool   `json:"isVerified"`
	Owner        struct {
		Address       string `json:"address"`
		Config        string `json:"config"`
		IsCompromised bool   `json:"isCompromised"`
		User          struct {
			PublicUsername string `json:"publicUsername"`
			ID             string `json:"id"`
		} `json:"user"`
		DisplayName string `json:"displayName"`
		ImageURL    string `json:"imageUrl"`
		ID          string `json:"id"`
	} `json:"owner"`
	Stats struct {
		NumOwners   int    `json:"numOwners"`
		TotalSupply int    `json:"totalSupply"`
		ID          string `json:"id"`
	} `json:"stats"`
	NativePaymentAsset struct {
		Symbol string `json:"symbol"`
		Asset  struct {
			ImageURL string `json:"imageUrl"`
			ID       string `json:"id"`
		} `json:"asset"`
		ID string `json:"id"`
	} `json:"nativePaymentAsset"`
	StatsV2 struct {
		NumOwners   int `json:"numOwners"`
		TotalSupply int `json:"totalSupply"`
		TotalVolume struct {
			Unit string `json:"unit"`
		} `json:"totalVolume"`
		FloorPrice struct {
			Unit string `json:"unit"`
		} `json:"floorPrice"`
	} `json:"statsV2"`
	DiscordURL        string      `json:"discordUrl"`
	ExternalURL       string      `json:"externalUrl"`
	InstagramUsername interface{} `json:"instagramUsername"`
	MediumUsername    interface{} `json:"mediumUsername"`
	TelegramURL       interface{} `json:"telegramUrl"`
	TwitterUsername   string      `json:"twitterUsername"`
	IsWatching        bool        `json:"isWatching"`
	ID                string      `json:"id"`
}

func Scrape(url string) (string, error) {
	cmd := exec.Command("bash", "-c", "python3 scripts/scrape.py "+url)
	out, err := cmd.CombinedOutput()
	if err != nil {
		log.Printf("[cmd.CombinedOutput]: %v", err)
		return "", err
	}
	autoGenerated := AutoGenerated{}

	if err := json.Unmarshal(out, &autoGenerated); err != nil {
		log.Printf("[json.Unmarshal]: %v", err)
		return "", err
	}

	//fp, err := strconv.ParseInt(autoGenerated.StatsV2.FloorPrice.Unit, 10, 64)
	//
	//if err != nil {
	//	log.Printf("[strconv.ParseInt]: %v", err)
	//	return -1, err
	//}
	return autoGenerated.StatsV2.FloorPrice.Unit, nil
}
